from telegram import KeyboardButton, ReplyKeyboardMarkup
from bot.msm_share import MSMShare
from bot.userfavouriteshares import UserFavouriteShares
from bot.cbrates import CBRates
import logging
import sys
import config

logger = logging.getLogger()

def handle_start(update, context):
    chat_id = update.effective_chat.id
    first_name = update.effective_chat.first_name
    last_name = update.effective_chat.last_name or ""
    
    bot_name = context.bot.get_me().first_name
    
    path = config.START_STICKER_PATH
    
    if path: 
        sti = open(path, 'rb')
        context.bot.send_sticker(chat_id, sti)
    
    message = f"–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫{f', {first_name}' if first_name else ''}!\n–Ø - {bot_name}, –±–∏—Ä–∂–µ–≤–æ–π –±–æ—Ç, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–º—É –í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ –∞–∫—Ü–∏–π –∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç –¶–ë –†–§.\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–∫—Ü–∏–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ –∞–∫—Ü–∏–π \"Apple\", \"Google\" –∏–ª–∏ \"Amazon\".\n–¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§ –∫ —Ä—É–±–ª—é, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É \"/getrates\", –∏–ª–∏ –≤—ã–±—Ä–∞–≤ –µ—ë –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥.\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω–µ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∞–∫—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë MCX –≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, <b>\"YNDX\"</b> –∏–ª–∏ <b>\"GaZp\"</b>.\n–ï—â—ë –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∞–∫—Ü–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ MCX –∞–∫—Ü–∏–∏, –∞ –∑–∞—Ç–µ–º, –Ω–∞ –ø–æ—è–≤–∏–≤—à–µ–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤—ã–±–µ—Ä–∏—Ç–µ \"–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ [MCX –∞–∫—Ü–∏–∏]\".\n–ó–∞—Ç–µ–º, –∫–æ–≥–¥–∞ –í—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π, –≤–≤–µ–¥–∏—Ç–µ \n\"/getfavourite\". –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∞–∫—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞. –ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∞–∫—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \n\"/clearfavourite\" –∏ —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω.\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!"
    
    context.bot.send_message(chat_id, message, parse_mode="html")
    
    logger.info(f"{first_name} {last_name} –≤—ã–±—Ä–∞–ª –∫–æ–º–∞–Ω–¥—É start")

def handle_get_favourite(update, context):
    chat_id = update.effective_chat.id
    first_name = update.effective_chat.first_name
    last_name = update.effective_chat.last_name
        
    message = "–°—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π:\n"
    log_message = f"{first_name} {last_name or ''} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
    favourite_shares = UserFavouriteShares(chat_id).get_favourite_shares()
        
    if not favourite_shares:
        message = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–πüòÖ\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ MCX –∞–∫—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä \"YNDX\"."
    for mcx in favourite_shares:
        share = MSMShare(mcx)
        message += f"{mcx} ({share.get_share_name()}): <b>{share.get_share_price()}</b>‚ÇΩ\n"
        
    logger.info(log_message)
    
    context.bot.send_message(chat_id, message, parse_mode="html")
            
        
def handle_clear_favourite(update, context):
    chat_id = update.effective_chat.id
        
    UserFavouriteShares(chat_id).clear_favourite_shares()
        
    context.bot.send_message(chat_id, f"–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π –±—ã–ª –æ—á–∏—â–µ–Ω.")

def handle_get_rates(update, context):
    chat_id = update.effective_chat.id
    first_name = update.effective_chat.first_name
    last_name = update.effective_chat.last_name
        
    try:
        CB_exchange_rates = CBRates()
        CB_exchange_rates_previous = CB_exchange_rates.get_previous_exchange_rates()

        #"DOOMTOWN - big game hunter"
        NEEDED_RATES = config.VALUTES
            
        message = "üè¶\n–ö—É—Ä—Å—ã –¶–ë –≤–∞–ª—é—Ç –∫ —Ä—É–±–ª—é:\n"
            
        prices = CB_exchange_rates.data["prices"]
        previous_price = CB_exchange_rates_previous.data["prices"]
            
        names = CB_exchange_rates.data["names"]
        nominal = CB_exchange_rates.data["nominal"]
            
        for key in NEEDED_RATES:
            if prices[key] > previous_price[key]:
                sign = '‚è´'
            elif prices[key] < previous_price[key]:
                sign = '‚è¨'
            else:
                sign = ''
                
            message += f"{nominal[key]} {names[key][0].lower() + names[key][1:]}:\n<b>{prices[key]}</b>{sign}\n"
            
            
        log_message = f"{first_name} {last_name or ''} –∑–∞–ø—Ä–æ—Å–∏–ª –∫—É—Ä—Å –≤–∞–ª—é—Ç"
    except ConnectionError:
        message = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥."
        log_message = f"{first_name} {last_name or ''} –∑–∞–ø—Ä–æ—Å–∏–ª –∫—É—Ä—Å –≤–∞–ª—é—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞–∑"
            
    logger.info(log_message)
    context.bot.send_message(chat_id, message, parse_mode="html")
            
def handle_message(update, context):
    chat_id = update.effective_chat.id
    first_name = update.effective_chat.first_name
    last_name = update.effective_chat.last_name
    text = update.message.text
    reply_keyboard = [[]]
        
    if "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:" in text:
        mcx = f"{text[-4]}{text[-3]}{text[-2]}{text[-1]}"
        userFavouriteShares = UserFavouriteShares(chat_id)
        
        if not mcx in userFavouriteShares.get_favourite_shares():
            userFavouriteShares.add_favourite_share(mcx)
            message = f"–ê–∫—Ü–∏—è \"{mcx}\" –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"/getfavourite\", —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π."
            log_message = f"{first_name} {last_name or ''} –¥–æ–±–∞–≤–∏–ª –∞–∫—Ü–∏—é {mcx} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
        
        else:
            message = f"–ê–∫—Ü–∏—è \"{mcx}\" —É–∂–µ –≤ –í–∞—à–µ–º —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–πü§∑‚Äç‚ôÇÔ∏è"
            log_message = f"{first_name} {last_name or ''} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–±–∞–≤–∏—Ç—å {mcx} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –Ω–æ —ç—Ç–∞ –∞–∫—Ü–∏—è —É–∂–µ –±—ã–ª–∞ –≤ —Å–ø–∏—Å–∫–µ"
        
    elif "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:" in text:
        mcx = f"{text[-4]}{text[-3]}{text[-2]}{text[-1]}"
        userFavouriteShares = UserFavouriteShares(chat_id)
        
        if mcx in userFavouriteShares.get_favourite_shares():  
            UserFavouriteShares(chat_id).remove_from_favourite_shares(mcx)
            message = f"–ê–∫—Ü–∏—è \"{mcx}\" –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"/getfavourite\", —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π."
            log_message = f"{first_name} {last_name or ''} —É–¥–∞–ª–∏–ª –∞–∫—Ü–∏—é {mcx} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
        
        else:
            message = f"–ê–∫—Ü–∏–∏ \"{mcx}\ –∏ —Ç–∞–∫ –Ω–µ—Ç –≤ –í–∞—à–µ–º —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–πü§∑‚Äç‚ôÇÔ∏è"
        
    else:
        try:
            share = MSMShare(text)
            price = share.get_share_price()
            share_name = share.get_share_name()
                
            log_message = f"{first_name} {last_name or ''} –∑–∞–ø—Ä–æ—Å–∏–ª –∞–∫—Ü–∏—é {text}, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {price}‚ÇΩ"
            message = f"–ü–æ –¥–∞–Ω–Ω—ã–º –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ü–∏–π {share_name} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{price}</b>‚ÇΩ."
                
            if not text.upper() in UserFavouriteShares(chat_id).get_favourite_shares():
                reply_keyboard = [    
                    [KeyboardButton(f"–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {text.upper()}")]
                ]
        
            else:
                reply_keyboard = [    
                    [KeyboardButton(f"–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {text.upper()}")]
                ]
        
        except ValueError:
            message = "–£–ø—Å... –ü–æ—Ö–æ–∂–µ —Ç–∞–∫–æ–π –∞–∫—Ü–∏–∏ –Ω–µ—Ç..."
            log_message = f"{first_name} {last_name or ''} –∑–∞–ø—Ä–æ—Å–∏–ª –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∞–∫—Ü–∏—é. –í–≤–æ–¥: {text}"
            
    logger.info(log_message)
    
    context.bot.send_message(chat_id, message, parse_mode="html", reply_markup=ReplyKeyboardMarkup(keyboard=(reply_keyboard or ""), one_time_keyboard=True, resize_keyboard=True))

def handle_sticker(update, context):
    chat_id = update.effective_chat.id
    first_name = update.effective_chat.first_name
    last_name = update.effective_chat.last_name or ""
    
    log_message = f"{first_name} {last_name} –ø—Ä–∏—Å–ª–∞–ª —Å—Ç–∏–∫–µ—Ä"
    
    logger.info(log_message)
    
    context.bot.send_message(chat_id, '–°—Ç–∏–∫–µ—Ä? –õ–∞–¥–Ω–æ.  ')